function [] = plotSensitivityStats(results,strain,varargin)
% plotSensitivityStats - Plots the ranking as a function of all parameter
% weights and the data used for quantifying the influence of each parameter
% on the rank
%
% plotSensitivityStats(results,strain)
% plotSensitivityStats(results,strain,parameters)
%
% Required input
% results       Structure variable generated by calcStrainRanking
% strain        String with the name of the strain to be shown
%
% Optional input
% parameters    Cell array with strings indicating which parameters to
%               show. By default all parameters are displayed.

%% DEFINE LISTS
strainList = results.strainList;
numStrains = length(strainList);
isStrain = ismember(strainList,strain);

parList = results.parList;
numPars = length(parList);

%weightMatrix = results.sensAnalysis.weightMatrix;
weightVector = results.sensAnalysis.weightVector;
parWeights = results.sensAnalysis.parWeights;

ranks = results.sensAnalysis.ranks(:,isStrain);
medianRank = results.sensAnalysis.medianRanks(isStrain);
medianRankSD = results.sensAnalysis.medianRanksSDs(isStrain); 


%% PLOT STATS
%fig_h = zeros(numPars,1);
ax_h = zeros(numPars,2);
sc1_h = zeros(numPars,2);

for p = 1:numPars    
    isWeightVector = ismember(parWeights(:,p),weightVector);
    
    % Plot all sampling points
    figure;    
    ax_h(p,1) = subplot(2,1,1); set(ax_h(p,1),'ylim',[0 numStrains]); set(ax_h(p,1),'Box','on'); hold on;
    title(parList{p})
    xlabel('Parameter weight')
    ylabel('Rank')
    
    sc1_h(p,1) = scatter(parWeights(~isWeightVector,p),ranks(~isWeightVector),'o','MarkerEdgeColor','k','MarkerFaceColor','c'); 
    sc1_h(p,2) = scatter(parWeights(isWeightVector,p),ranks(isWeightVector),'o','MarkerEdgeColor','k','MarkerFaceColor','b');
    
    line([0 5], medianRank*[1 1],'Linewidth',2,'Color','r')
    line([0 5], medianRank+medianRankSD*[1 1],'Linestyle','--','Linewidth',1,'Color','r')
    line([0 5], medianRank-medianRankSD*[1 1],'Linestyle','--','Linewidth',1,'Color','r')
    
    % Plot points used for estimating parameter influence
    ax_h(p,2) = subplot(2,1,2); set(ax_h(p,2),'ylim',[0 numStrains]); set(ax_h(p,2),'Box','on'); hold on;
    xlabel('Average parameter weight')
    ylabel('Rank')
    
    stats = results.sensAnalysis.rankingStats{isStrain,p};
    sc1_h(p,1) = scatter(stats(:,3),stats(:,1),stats(:,4)*100,'o','MarkerEdgeColor','k','MarkerFaceColor','b');
    
    if size(stats,1) > 1
        mdl = LinearModel.fit(stats(:,3),stats(:,1),'Weights',stats(:,4));
        y = feval(mdl,[0 5]);
        %sc1_h(p,1) = scatter(stats(:,3),stats(:,1),stats(:,4)*100,'o','MarkerEdgeColor','k','MarkerFaceColor','b');
        line([0 5], y,'LineStyle','--','Linewidth',2,'Color','k');
        
        intercept = mdl.Coefficients{1,1};
        slope = mdl.Coefficients{2,1};
        if intercept < 0
            str = sprintf('y = %0.2f*x - %0.2f',slope,-intercept);
        else
            str = sprintf('y = %0.2f*x + %0.2f',slope,intercept);
        end
        annotation('textbox', [0.1,0.3,0.1,0.1],'String', str);
    end
end
