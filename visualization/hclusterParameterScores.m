function results = hclusterParameterScores(datafile)
% hclusterParameterScores - Performs a hierarchical clustering of the
% parameters scores used to rank strains according to either robustness or
% tolerance.
%
% results = hclusterParameterScores(datafile)
%
% Required input
% datafile          Structure generated by calcStrainRanking

%% DEFINE LISTS


strainList = datafile.strainList;
parList = datafile.parList;
levelList = datafile.levelList;

numStrains = length(strainList);
numPars = length(parList);
numLevels = length(levelList);

%% GATHER DATA FOR CLUSTERING
results = zeros(numStrains,numLevels*numPars);
% results2 = zeros(numStrains,numLevels*numPars);
% cnt = 0;
% for c = 1:numLevels
%     for p = 1:numPars    
%         cnt = cnt + 1;
%         results(:,cnt) = datafile.parameters.scores{p}(:,c);
%     end
% end

if size(datafile.parameters.scores,1) == 1
    cnt = 0;
    for p = 1:numPars
        for c = 1:numLevels
            cnt = cnt + 1;
            results(:,cnt) = datafile.parameters.scores{p}(:,c);
        end
    end
else
   for s = 1:numStrains
       cnt1 = 1;
       cnt2 = numLevels;
       for p = 1:numPars
           results(s,cnt1:cnt2) = datafile.parameters.scores{s}(:,p)';
           
           cnt1 = cnt2+1;
           cnt2 = cnt1+numLevels-1;
       end
   end
end

strainRanks = datafile.sortedResults(:,1:2);
Y = sortrows(strainRanks,2);
groups = strcat(Y(:,2),{' ('},Y(:,1),{')'});

%%
% h = clustergram(results,'RowLabels',groups,'Cluster',1,'Colormap',redbluecmap,'Symmetric',false,'DisplayRange',20);
h = clustergram(results,'RowLabels',groups,'Cluster',1,'Colormap',redbluecmap,'Symmetric',false,'DisplayRange',20);

%% HEATMAP
groups = strcat(strainRanks(:,2),{' ('},strainRanks(:,1),{')'});

I = datafile.sortingIDX;
I2 = I(end:-1:1);
groups = groups(end:-1:1);

h3 = HeatMap(results(I2,:),'RowLabels',groups,'Colormap',redbluecmap,'Symmetric',false,'DisplayRange',20);

results = results(I,:);













